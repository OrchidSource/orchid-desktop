/**
 * Holds general styles used throughout the app
*/
@import './fonts';

@import './mixins';
@import './variables';
@import './bootstrap_overrides';
@import '~bootstrap/scss/bootstrap.scss';

/*common */
html {
  font-size: 16px;
  overflow: hidden;
}


a small {
  color: $brand-primary !important;
}

h1, h2, .h1, .h2 {
  font-weight: bold;
  text-transform: uppercase;
}

h1, .h1 {
  line-height: 48px;
}

h2, .h2 {
  line-height: 32px;
}

h3, .h3 {
  line-height: 30px;
  text-transform: uppercase;
}

h4, .h4 {
  font-family: 'OpenSans';
  text-transform: uppercase;
  line-height: 32px;
  font-weight: bold;
}


.paragraph { // also p?
  font-family: 'OpenSans';
  font-weight: bold;
  font-size: 16px
}

.caption {
  font-family: 'OpenSans';
  font-weight: bold;
  font-size: 12px
}

.small {
  font-size: 14px;
}


.hidden {
  display: none !important;
}

.back-link {
  margin-top: 5px;
}

.btn.btn-link {
  color: $gray;
  color: $secondary-text-color;
  text-decoration: underline;
}

.help-text {
  text-decoration: underline;
}

// maybe not needed anymore?
.pop-over-content {
  z-index: 3000;

  .message {
    @include minimized-breakpoint {
      width: 328px;
      left: -165px;
    }

    form {
      .form-group {
        @include minimized-breakpoint {
          margin-bottom: 0;
        }
      }
    }
    position: absolute;
    background: rgba(74,74,74,0.89);
    box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.41);
    border-radius: 4px 4px 4px 4px;
    color: #fff;
    padding: 15px;
    font-size: 13px;
    border-radius: 4px;
  }
}

.po-top {
  .message {
    width: 443px;
    left: -210px;
    top: 22px;

    &:before {
      right: 50%;
      top: 0;
      border: solid transparent;
      content: " ";
      height: 0;
      width: 0;
      position: absolute;
      border-color: rgba(194, 225, 245, 0);
      border-bottom-color: rgba(74, 74, 74, 0.89);
      border-width: 16px;
      margin-top: -32px;
      margin-left: 16px;
    }
  }
}

.po-right {
  margin-left: 16px;

  .message {
    min-width: 120px;

    &:before {
      left: 0;
      top: 50%;
      border: solid transparent;
      content: " ";
      height: 0;
      width: 0;
      position: absolute;
      border-color: rgba(194, 225, 245, 0);
      border-right-color: rgba(74, 74, 74, 0.89);
      border-width: 8px;
      margin-left: -16px;
      margin-top: -8px;
    }
  }
}

// btns

.btn {
  padding: 6px 0.7rem;
  font-family: 'OpenSans';
  font-weight: 300;
  font-size: 14px;
  height: 35px;
  &:focus {
    color: #fff;
  }
}

.btn-lg {
  padding: 0.75rem 1.5rem !important;
  line-height: 1.4;
  height: $btn-lg-height;
}


.btn.btn-primary, .btn-primary {
  &:hover {
    background-color: $brand-primary-hover;
    border-color: $brand-primary-hover;
  }
  &:active {
    background-color: $brand-primary-clicked;
  }
  &:active:focus:not(:disabled):not(.disabled), &:focus {
    box-shadow: none;
  }
}

.btn-secondary {
  color: white;
}

button:focus, .btn:focus {
  outline: none;
}

// an img or .img element inside a .btn.btn-img with .btn-img will be placed at the left-hand side of the button
.btn.btn-img {
  position: relative;
  img, .img {
    position: absolute;
    width: 18px;
    left: 14px;
    top: 50%;
    transform: translateY(-50%);
  }
  span {
    padding: 0 18px; // To prevent overlapping with image when text gets long
  }
}


.btn.btn-wide {
  min-width: 160px;
}


/** the button with a gray border */
.btn-border {
  color: $gray-light;
  border-color: $gray-light;
  &:hover {
    color: $gray-lighter;
    border-color: $gray-lighter;
  }
  &:active {
    color: $gray;
    border-color: $gray;
  }
}

/** put on a container that contains items that should be aligned right and speced transparent
(e.g. the rows of action buttons at the bottom of modals)
*/
.row-actions {
  // text-align: right;
  // padding-top: 10px;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  > * {
    margin-left: 24px;
  }
}
@include minimized-breakpoint {
  .row-actions {
    display: flex;
    flex-direction: column;
    justify-content: unset;
    > * {
      margin-left: 0px;
      margin-top: $orchid-gutter-width / 2;
      margin-bottom: $orchid-gutter-width / 2;
    }
  }
}

.row.equal-height {
  display: flex;
  flex-wrap: wrap;
}

.row.equal-height > [class*='col-'] {
  display: flex;
  flex-direction: column;
}

.card {
  flex: 1;
  margin-bottom: 1.5rem;
}

.row .col {
  padding-top: 30px;
  padding-bottom: 30px;
}

.secondary-text {
  color: $secondary-text-color;
}

/** Add to inputs for rounded corner styling */
input.input-rounded {
  border-radius: 100px;
}

input[type=number]::-webkit-inner-spin-button {
  opacity: 1;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  background: #FFF url("../imgs/spinners.png") no-repeat center center;
  width: 2em;
  opacity: 1;
  /* shows Spin Buttons per default (Chrome >= 39) */
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
}


/** Put a magnifying glass on the right side of the input box */
input[type=text].input-search {
  background-image: url(../imgs/icons/search.svg);
  background-repeat: no-repeat;
  background-position-x: calc(100% - 20px);
  background-position-y: center;
  padding-right: 45px; // to prevent the text from overlapping the search icon
}

// Put a "chiclet" on the left of a button.
// To use, put .btn-chiclet on the .btn element, and put a .chiclet div inside the button
.btn-chiclet {
  padding-left: 55px;

  > .chiclet {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    border-radius: 0.25rem 0 0 0.25rem;
    // background-color: $primary-color;
    color: white;
    width: 40px;
    // centers contained divs
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

.step-group {
  .step {
    color: #fff;
    font-size: 13px;
    background-color: $light-grey-bg;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    margin-right: 5px;
    display: inline-block;
    text-align: center;
    line-height: 22px;
  }

  .connector {
    hr {
      width: 100%;
    }
  }

  &.active span {
    // background-color: $secondary-color;
  }

  &.complete {
    span {
      background-color: $brand-success;
    }

    .fa-check {
      color: $brand-success;
    }
  }

  &.col {
    padding-top: 0;
    padding-bottom: 0;
  }
}

/*
 * The style for components put in the "modal" outlet
 */
.routed-modal-container {
  height: 100%;
  width: 100%;
  position: fixed;
  z-index: 100;
  display: inline-flex;
  background-color: $background-transparency;

  /** The modal body */
  .routed-modal {
    background-color: white;
    border-radius: $card-border-radius;
    padding: $orchid-gutter-width;

    // set these to change the size
    width: 50%;
    // height: 50%;
    margin: auto auto;
    box-shadow: $default-shadow;
  }

  // Style for modal dialogs with left- and right-hand sides
  .routed-modal.divided-dialog {
    padding: 0;
    display: flex;
    > div {
      width: 50%;
      padding: $orchid-gutter-width;
    }
    > div:first-child {
      border-right: 1px solid $gray-light;
    }
  }

  /* because we've got lots of modal styles */
  .routed-modal.paddingless {
    padding: 0;
  }
}

// narrow modal styling

@include minimized-breakpoint {
  .routed-modal-container {
    .routed-modal {
      margin-left: 0;
      margin-right: 0;
      border-radius: 0;
      width: 100%;
      }
  }
}

/** tooltip icon */
a > img[src='assets/imgs/question.svg'] {
  width: 14px;
}


// TODO: we should use "narrow" and "wide" instead of "minimized" and "maximized"
/** Hide when in narrow version */
.hide-minimized, .hide-narrow {
  @include hide-minimized();
}

/** hide when in wide version */
.hide-maximized, .hide-wide {
  @include hide-maximized();
}
